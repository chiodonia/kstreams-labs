DROP STREAM IF EXISTS BANK_ATM_WITHDRAWN_EVENTS DELETE TOPIC;
DROP STREAM IF EXISTS BANK_ATM_DEPOSIT_EVENTS DELETE TOPIC;
DROP STREAM IF EXISTS BANK_ATM_EVENTS DELETE TOPIC;
DROP TYPE IF EXISTS BANK_ATM_TRANSACTION;

-- Data types
CREATE TYPE BANK_ATM_TRANSACTION AS
    STRUCT<
        `amount` BIGINT,
        `atm` VARCHAR
    >;

-- Streams
CREATE OR REPLACE STREAM BANK_ATM_EVENTS (
    `id` VARCHAR KEY,
    `timestamp` BIGINT,
    `withdrawn` BANK_ATM_TRANSACTION,
    `deposit` BANK_ATM_TRANSACTION
) WITH (
    KAFKA_TOPIC='bank.atm.Atm-event',
    PARTITIONS=6,
    VALUE_FORMAT='JSON'
);

CREATE OR REPLACE STREAM BANK_ATM_WITHDRAWN_EVENTS
WITH (
    KAFKA_TOPIC='bank.atm.Withdrawn-event',
    PARTITIONS=6,
    VALUE_FORMAT='JSON'
) AS
SELECT `id`, `timestamp`, STRUCT(`amount`:=ABS(`withdrawn`->`amount`), `atm`:=CONCAT('ATM-', UCASE(`withdrawn`->`atm`))) AS `withdrawn` FROM BANK_ATM_EVENTS WHERE `withdrawn` IS NOT NULL;

CREATE OR REPLACE STREAM BANK_ATM_DEPOSIT_EVENTS
WITH (
    KAFKA_TOPIC='bank.atm.Deposit-event',
    PARTITIONS=6,
    VALUE_FORMAT='JSON'
) AS
SELECT `id`, `timestamp`, STRUCT(`amount`:=ABS(`deposit`->`amount`), `atm`:=CONCAT('ATM-', UCASE(`deposit`->`atm`))) AS DEPOSIT FROM BANK_ATM_EVENTS WHERE `deposit` IS NOT NULL;
